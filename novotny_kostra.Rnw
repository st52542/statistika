% !TEX encoding = UTF-8 Unicode
\documentclass[a4paper]{ article}
\usepackage{cmap}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage[czech]{babel}
\selectlanguage{czech}
\usepackage{vskpupa}
\def\jmenoFakulty{Fakulta elektrotechniky a informatiky}
\def\jmenoAutora{Bc. Jiří Novotný}
\def\nazevPrace{Zpracování dat pro předmět NMAST}
\def\typPrace{Semestrální práce}
\def\rok{2020}
\begin{document}
\SweaveOpts{concordance=TRUE}
\titulniStrana
\generujObsah			% obsah
\generujSeznamObrazku		% seznam obrázků
\generujSeznamTabulek		% seznam tabulek
\SweaveOpts{concordance=TRUE}
\clearpage
\pagestyle{plain}		% zapne číslování stránek (sazba zápatí)
\phantomsection \addcontentsline{toc}{section}{Úvod}
\section*{Úvod}
<<load_libraries,echo=FALSE>>=
library("readxl")
library("dplyr")
library(xtable)
library(e1071)
library(hexbin)
library(RColorBrewer)
library(scatterplot3d)
library("aplpack")
library(stringi)
library(Cairo)
library(MASS)
@
\label{uvod}
<<input,echo=FALSE>>=
dataFromExcel <- read_xlsx("C:\\Users\\herci\\Documents\\statistika_navazujici\\semestralka\\cnb_kurz_r-pracovni.xlsx")
POCETMEN=10
POCETZAZNAMU=100
mojeData = dataFromExcel[1:1,1:11]
maticeMen = dataFromExcel[1:101,2:11]
forVariables = colnames(mojeData)
for (i in seq(1,length(forVariables),by=1)) {
   assign(paste(forVariables[i],sep ="_", "vector"),pull(assign(forVariables[i],dataFromExcel[1:101,i])))
}
@
\section{Popisná statistika}
<<myFncs,echo=FALSE>>=
getmode <- function(v) {
   uniqv <- unique(v)
   uniqv[which.max(tabulate(match(v, uniqv)))]
}
@
<<popisna_table, echo=FALSE,results=tex>>=
POCETUDAJU=9
myMatrix= matrix(nrow = 9,ncol = 10)
curencies=forVariables[-1]
maxSkewness=.Machine$double.xmin
columnMaxSkewness=0
minSkewness=.Machine$integer.max
columnMinSkewness=0
minMeanHigest=.Machine$integer.max
minMeanHiger=.Machine$integer.max
columnHigest=0
columnHiger=0
colnames(myMatrix)<-curencies
rownames(myMatrix)<-c("prumer", "modus","median","max","min","skewness","kurtosis","deviation","interquartile")
#prumer
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[1,i]<-mean(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
   if (minMeanHigest>mean(eval(as.name(paste(curencies[i],sep ="_", "vector"))))) {
      minMeanHigest<-mean(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
      columnHigest<-i
   }else{
      if (minMeanHiger>mean(eval(as.name(paste(curencies[i],sep ="_", "vector"))))) {
            minMeanHiger<-mean(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
            columnHiger<-i 
      }
   }
}
#modus
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[2,i]<-getmode(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#median
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[3,i]<-median(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#max
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[4,i]<-max(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#min
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[5,i]<-min(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#rozdeleni sikmost
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[6,i]<-skewness(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
   if (maxSkewness<skewness(eval(as.name(paste(curencies[i],sep ="_", "vector"))))) {
   maxSkewness<-skewness(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
   columnMaxSkewness<-i
}
   if (minSkewness>skewness(eval(as.name(paste(curencies[i],sep ="_", "vector"))))) {
   minSkewness<-skewness(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
   columnMinSkewness<-i
}
}
#rozdeleni spicatost
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[7,i]<-kurtosis(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#smerodatna odchylka
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[8,i]<-sd(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
#interkvartilní rozsah
for (i in seq(1,length(curencies),by=1)) {
   myMatrix[9,i]<-IQR(eval(as.name(paste(curencies[i],sep ="_", "vector"))))
}
print(xtable(myMatrix,
             caption="Části popisné statistiky aplikované na data",
             label="table:popisStat"),
      include.rownames=TRUE,
      caption.placement="bottom"
      )
@
\clearpage
\section{Základní grafy}
\subsection{Histogram}
\begin{figure}[H]
\centering
<<histogram_max, echo=FALSE,results=hide>>=
pomocnaMax=eval(as.name(paste(curencies[columnMaxSkewness],sep ="_", "vector")))
CairoPDF("histogram_max.pdf")
hist(pomocnaMax, main = paste("Histogram pro hodnoty měny", curencies[columnMaxSkewness]),xlab = "Četnost ceny vůči koruně", ylab = "Vývoj ceny vůči koruně",ylim = c(0,40),xlim = c(min(eval(as.name(paste(curencies[columnMaxSkewness],sep ="_", "vector")))),max(eval(as.name(paste(curencies[columnMaxSkewness],sep ="_", "vector"))))), col = "orange", border = "blue")
invisible(dev.off())
@
\includegraphics[width=10cm]{histogram_max.pdf}
\caption{Histogram měny s maximální hodnotou šikmosti}
<<histogram_min, echo=FALSE,results=hide>>=
pomocnaMin=eval(as.name(paste(curencies[columnMinSkewness],sep ="_", "vector")))
CairoPDF("histogram_min.pdf")
print(hist(pomocnaMin, main = paste("Histogram pro hodnoty měny", curencies[columnMinSkewness]), xlab = "Četnost ceny vůči koruně", ylab = "Vývoj ceny vůči koruně",ylim = c(0,40),xlim = c(min(eval(as.name(paste(curencies[columnMinSkewness],sep ="_", "vector")))),max(eval(as.name(paste(curencies[columnMinSkewness],sep ="_", "vector"))))), col = "orange", border = "blue"),justify = "none")
invisible(dev.off())
@
\includegraphics[width=10cm]{histogram_min.pdf}
\caption{Histogram měny s minimální hodnotou šikmosti}
\end{figure}
\subsection{Boxplot}
\begin{figure}[H]
\centering
<<boxplot_graf, echo=FALSE,results=hide>>=
pomocnaBox1=eval(as.name(paste(curencies[1],sep ="_", "vector")))
pomocnaBox2=eval(as.name(paste(curencies[2],sep ="_", "vector")))
CairoPDF("boxplot_graf.pdf")
boxplot(pomocnaBox1,pomocnaBox2, main = paste("Boxplot pro srovnání kvartilů měn", curencies[1], "a", curencies[2]),names=c(curencies[1],curencies[2]), col=(c("orange","lightblue")))
@
\includegraphics[width=10cm]{boxplot_graf.pdf}
\caption{Boxplot graf pro první dvě měny}
\end{figure}
\subsection{Bodový graf}
\begin{figure}[H]
\centering
<<bodovy_max, echo=FALSE,results=hide>>=
CairoPDF("bodovy_max.pdf")
plot(pomocnaMax, main = paste("Bodový graf vývoje ceny v čase pro hodnoty měny", curencies[columnMaxSkewness]),ylab= "Vývoj ceny", xlab="Uplynulé dny dostupných kurzů")
@
\includegraphics[width=10cm]{bodovy_max.pdf}
\caption{Bodový graf měny s maximální hodnotou šikmosti}
<<bodovy_min, echo=FALSE,results=hide>>=
CairoPDF("bodovy_min.pdf")
plot(pomocnaMin, main = paste("Bodový graf vývoje ceny v čase pro hodnoty měny", curencies[columnMinSkewness]), ylab= "Vývoj ceny",xlab="Uplynulé dny dostupných kurzů")
@
\includegraphics[width=10cm]{bodovy_min.pdf}
\caption{Bodový graf měny s minimální hodnotou šikmosti}
\end{figure}
\subsection{Hexbin}
\begin{figure}[H]
\centering
<<hexbin_graf_max, echo=FALSE,results=hide>>=
pomocnaHexMax=as.name(paste(curencies[columnMaxSkewness],sep ="_", "vector"))
dataHexbinF <- data.frame(y = c(rnorm(101)),x = c(eval(pomocnaHexMax)))
rf <- colorRampPalette(rev(brewer.pal(12, 'Set3')))
CairoPDF("hexbin_graf_max.pdf")
hexbinplot(y ~ x, dataHexbinF, colramp=rf, main=paste("Graf kurzů, které jsou stejné pro měnu ", curencies[columnMaxSkewness]), xlab="Cena vůči koruně", ylab="")
@
\includegraphics[width=10cm]{hexbin_graf_max.pdf}
\caption{Hexbin graf měny s maximální hodnotou šikmosti}
\centering
<<hexbin_graf_min, echo=FALSE,results=hide>>=
pomocnaHexMin=as.name(paste(curencies[columnMinSkewness],sep ="_", "vector"))
dataHexbinF <- data.frame(y = c(rnorm(101)),x = c(eval(pomocnaHexMin)))
rf <- colorRampPalette(rev(brewer.pal(12, 'Set3')))
CairoPDF("hexbin_graf_min.pdf")
hexbinplot(y ~ x, dataHexbinF, colramp=rf, main=paste("Graf kurzů, které jsou stejné pro měnu ", curencies[columnMinSkewness]), xlab="Cena vůči koruně", ylab="")
@
\includegraphics[width=10cm]{hexbin_graf_min.pdf}
\caption{Hexbin graf měny s minimální hodnotou šikmosti}
\end{figure}
\subsection{3D graf}
\begin{figure}[H]
\centering
<<3D_graf_max, echo=FALSE,results=hide>>=
z <- eval(as.name(paste(curencies[columnMaxSkewness],sep ="_", "vector")))
x <- cos(z)
y <- sin(z)
CairoPDF("3D_graf_max.pdf")
scatterplot3d(x, y, z, highlight.3d=TRUE, col.axis="blue",
col.grid="lightblue", main=paste("Vývoj ceny",curencies[columnMaxSkewness]), pch=20,xlab="",ylab="",zlab="Cena vůči koruně")
@
\includegraphics[width=10cm]{3D_graf_max.pdf}
\caption{3D graf graf měny s maximální hodnotou šikmosti}
\end{figure}
\begin{figure}[H]
\centering
<<3D_graf_min, echo=FALSE,results=hide>>=
z <- eval(as.name(paste(curencies[columnMinSkewness],sep ="_", "vector")))
x <- cos(z)
y <- sin(z)
CairoPDF("3D_graf_min.pdf")
scatterplot3d(x, y, z, highlight.3d=TRUE, col.axis="blue",
col.grid="lightblue", main=paste("Vývoj ceny",curencies[columnMinSkewness]), pch=20,xlab="",ylab="",zlab="Cena vůči koruně")
@
\includegraphics[width=10cm]{3D_graf_min.pdf}
\caption{3D graf graf měny s minimální hodnotou šikmosti}
\end{figure}
\subsection{Chernoff faces}
\begin{figure}[H]
\centering
<<faces_graf, echo=FALSE>>=
CairoPDF("faces_graf")
faces(myMatrix[,1:10])
@
\includegraphics[width=10cm]{faces_graf.pdf}
\caption{Chernoff faces graf tabulky popisné statistiky}
\end{figure}
\clearpage
\section{Testování statistických hypotéz}
<<testHypVar, echo=FALSE,results=hide>>=
TestHypCur1 = eval(as.name(paste(curencies[1],sep ="_", "vector")))
TestHypCur2 = eval(as.name(paste(curencies[2],sep ="_", "vector")))
@
\subsection{Jednovýběrový Studentův test vůči střední hodnotě}
<<testStrH, echo=FALSE>>=
t.test(TestHypCur1, mu=20)
@
\subsection{Dvouvýběrový Studentův test}
<<testDvouVyber, echo=FALSE>>=
t.test(TestHypCur1,TestHypCur2)
@
\subsection{Fisherův test}
<<testFis, echo=FALSE>>=
var.test(TestHypCur1,TestHypCur2)
@
\section{ANOVA}
\section{Korelace}
\subsection{Korelační matice}
\begin{table}[H]
<<cor_matice, echo=FALSE>>=
corMatice<-cor(maticeMen)
corMaxValue=-1
corMinValue=1
iCorMaxValue=0
jCorMaxValue=0
iCorMinValue=0
jCorMinValue=0
for (i in 1:10) {
  for (j in 1:10) {
   if (corMaxValue<corMatice[i,j]&&corMatice[i,j]!=1) {
         corMaxValue<-corMatice[j,i]
         iCorMaxValue=i
         jCorMaxValue=j
   }
   if (corMinValue>corMatice[i,j]) {
         corMinValue<-corMatice[i,j]
         iCorMinValue=i
         jCorMinValue=j
   }
  }
}
print(corMatice)
@
\caption{Korelační matice}
\end{table}
\subsection{Bodové grafy hodnot z korelační matice}
\begin{figure}[H]
\centering
<<cor_max, echo=FALSE,results=hide>>=
CairoPDF("cor_max.pdf")
corXMax=as.name(paste(curencies[iCorMaxValue],sep ="_", "vector"))
corYMas=as.name(paste(curencies[jCorMaxValue],sep ="_", "vector"))
plot(eval(corXMax),eval(corYMas), main = paste("Graf závislosti ceny",curencies[jCorMaxValue], "na ceně", curencies[iCorMaxValue]),xlab=curencies[iCorMaxValue],ylab=curencies[jCorMaxValue])
mtext(paste("Hodnota korelace pro tento graf je:", corMaxValue), adj=1, line=3, font=2)
@
\includegraphics[width=10cm]{cor_max.pdf}
\caption{Bodový graf maximální hodnoty v korelační matici}
\end{figure}
\begin{figure}[H]
\centering
<<cor_min, echo=FALSE,results=hide>>=
CairoPDF("cor_min.pdf")
corXMax=as.name(paste(curencies[iCorMinValue],sep ="_", "vector"))
corYMas=as.name(paste(curencies[jCorMinValue],sep ="_", "vector"))
plot(eval(corXMax),eval(corYMas), main = paste("Graf závislosti ceny",curencies[jCorMinValue], "na ceně", curencies[iCorMinValue]),xlab=curencies[iCorMinValue],ylab=curencies[jCorMinValue])
mtext(paste("Hodnota korelace pro tento graf je:", corMinValue), adj=1, line=3, font=2)
@
\includegraphics[width=10cm]{cor_min.pdf}
\caption{Bodový graf minimální hodnoty v korelační matici}
\end{figure}
\clearpage
\section{Testování v kontingenčních tabulkách}
\subsection{Chí kvadrát test}
<<kontTabulka, echo=FALSE,results=hide>>=
levels(survey$Smoke)
smoke.freq=c(51, 120, 20, 30)
smoke.prob=c(.125,.65,.1,.125)
kontTab=table(survey$Smoke,survey$Exer)
kontTab[1,]<-c(40,6,5)
kontTab[2,]<-c(70,22,28)
kontTab[3,]<-c(15,2,3)
kontTab[4,]<-c(15,10,5)
kontTabSpojena=cbind(kontTab[,"Freq"],kontTab[,"None"]+kontTab[,"Some"])
@
<<prvniTabTests, echo=FALSE>>=
chisq.test(smoke.freq,p=smoke.prob)
chisq.test(kontTab)
chisq.test(kontTabSpojena)
@
\section{Lineární regrese}
<<lregreseCount, echo=FALSE,results=hide>>=
lRegreseCur1Val = eval(as.name(paste(curencies[iCorMaxValue],sep ="_", "vector")))
lRegreseCur2Val = eval(as.name(paste(curencies[jCorMaxValue],sep ="_", "vector")))
DATALregrese <- data.frame("lRegreseCur1" = lRegreseCur1Val, "lRegreseCur2" = lRegreseCur2Val)
lregrese <- lm(DATALregrese$lRegreseCur2~DATALregrese$lRegreseCur1)
predicate_int <- predict(lregrese, interval = "prediction", level=0.95)
pass_reliability <- predict(lregrese, interval = "confidence", level = 0.95)
@
<<lregreseText, echo=FALSE>>=
lregrese
summary(lregrese)
@
\begin{figure}[H]
<<lregresePlot, echo=FALSE,results=hide>>=
CairoPDF("lregresePlot.pdf")
lregrese
plot(DATALregrese)
abline(lregrese)
lines(DATALregrese[,1], pass_reliability[,2], type = "l", col="red")
lines(DATALregrese[,1], pass_reliability[,3], type = "l", col="green")
@
\includegraphics[width=10cm]{lregresePlot.pdf}
\caption{Graf lineární regrese}
\end{figure}
\clearpage
\section{Závěr}
\end{document}